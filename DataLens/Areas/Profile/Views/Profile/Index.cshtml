@model DataLens.Models.User
@{
    ViewData["Title"] = "Kullanıcı Profili";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0"><i class="fas fa-user-circle mr-2"></i>Kullanıcı Profili</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home", new { area = "" })">Ana Sayfa</a></li>
                    <li class="breadcrumb-item active">Profil</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <i class="icon fas fa-check"></i> @TempData["Success"]
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <i class="icon fas fa-ban"></i> @TempData["Error"]
            </div>
        }

        <div class="row">
            <!-- Profile Info Card -->
            <div class="col-md-4">
                <div class="card card-primary card-outline">
                    <div class="card-body box-profile">
                        <div class="text-center">
                            <img class="profile-user-img img-fluid img-circle"
                                 src="~/lib/admin-lte/img/user2-160x160.jpg"
                                 alt="User profile picture">
                        </div>

                        <h3 class="profile-username text-center">@Model.FirstName @Model.LastName</h3>

                        <p class="text-muted text-center">@Model.Role</p>

                        <ul class="list-group list-group-unbordered mb-3">
                            <li class="list-group-item">
                                <b>E-posta</b> <a class="float-right">@Model.Email</a>
                            </li>
                            <li class="list-group-item">
                                <b>Kullanıcı Adı</b> <a class="float-right">@Model.Email</a>
                            </li>
                            <li class="list-group-item">
                                <b>Kayıt Tarihi</b> <a class="float-right">@Model.CreatedDate.ToString("dd.MM.yyyy")</a>
                            </li>
                            <li class="list-group-item">
                                <b>Son Giriş</b> <a class="float-right">@DateTime.Now.ToString("dd.MM.yyyy HH:mm")</a>
                            </li>
                        </ul>

                        <a href="@Url.Action("Edit", "Profile", new { area = "Profile" })" class="btn btn-primary btn-block"><b>Profili Düzenle</b></a>
                    </div>
                </div>
            </div>

            <!-- Main Profile Content -->
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header p-0 pt-1">
                        <ul class="nav nav-tabs" id="custom-tabs-two-tab" role="tablist">
                            <li class="pt-2 px-3"><h3 class="card-title">Profil Yönetimi</h3></li>
                            <li class="nav-item">
                                <a class="nav-link active" id="custom-tabs-two-home-tab" data-toggle="pill" href="#custom-tabs-two-home" role="tab" aria-controls="custom-tabs-two-home" aria-selected="true">
                                    <i class="fas fa-cog"></i> Genel Ayarlar
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="custom-tabs-two-profile-tab" data-toggle="pill" href="#custom-tabs-two-profile" role="tab" aria-controls="custom-tabs-two-profile" aria-selected="false">
                                    <i class="fas fa-bell"></i> Bildirimler
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="custom-tabs-two-messages-tab" data-toggle="pill" href="#custom-tabs-two-messages" role="tab" aria-controls="custom-tabs-two-messages" aria-selected="false">
                                    <i class="fas fa-shield-alt"></i> Gizlilik
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="custom-tabs-two-settings-tab" data-toggle="pill" href="#custom-tabs-two-settings" role="tab" aria-controls="custom-tabs-two-settings" aria-selected="false">
                                    <i class="fas fa-key"></i> Şifre Değiştir
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body">
                        <div class="tab-content" id="custom-tabs-two-tabContent">
                            <!-- Genel Ayarlar Tab -->
                            <div class="tab-pane fade show active" id="custom-tabs-two-home" role="tabpanel" aria-labelledby="custom-tabs-two-home-tab">
                                @using (Html.BeginForm("UpdateSettings", "Profile", null, FormMethod.Post, false, new { @class = "form-horizontal" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.Id)
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Language, "Dil", htmlAttributes: new { @class = "control-label" })
                                                @Html.DropDownListFor(model => model.Language, new SelectList(new[] {
                                                    new { Value = "tr", Text = "Türkçe" },
                                                    new { Value = "en", Text = "English" }
                                                }, "Value", "Text", Model.Language), new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Theme, "Tema", htmlAttributes: new { @class = "control-label" })
                                                @Html.DropDownListFor(model => model.Theme, new SelectList(new[] {
                                                    new { Value = "light", Text = "Açık Tema" },
                                                    new { Value = "dark", Text = "Koyu Tema" }
                                                }, "Value", "Text", Model.Theme), new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Theme, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TimeZone, "Saat Dilimi", htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.TimeZone, new SelectList(new[] {
                                            new { Value = "Europe/Istanbul", Text = "İstanbul (UTC+3)" },
                                            new { Value = "UTC", Text = "UTC (UTC+0)" },
                                            new { Value = "Europe/London", Text = "Londra (UTC+0)" },
                                            new { Value = "America/New_York", Text = "New York (UTC-5)" }
                                        }, "Value", "Text", Model.TimeZone), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.TimeZone, "", new { @class = "text-danger" })
                                    </div>
                                    <button type="submit" class="btn btn-primary">Kaydet</button>
                                }
                            </div>

                            <!-- Bildirimler Tab -->
                            <div class="tab-pane fade" id="custom-tabs-two-profile" role="tabpanel" aria-labelledby="custom-tabs-two-profile-tab">
                                @using (Html.BeginForm("UpdateNotificationPreferences", "Profile", null, FormMethod.Post, false, new { @class = "form-horizontal" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.Id)
                                    <div class="form-group">
                                        <div class="custom-control custom-switch">
                                            @Html.CheckBoxFor(model => model.EmailNotifications, new { @class = "custom-control-input", @id = "emailNotifications" })
                                            @Html.LabelFor(model => model.EmailNotifications, "E-posta Bildirimleri", htmlAttributes: new { @class = "custom-control-label", @for = "emailNotifications" })
                                            @Html.ValidationMessageFor(model => model.EmailNotifications, "", new { @class = "text-danger" })
                                        </div>
                                        <small class="form-text text-muted">Önemli güncellemeler ve bildirimler e-posta ile gönderilsin.</small>
                                    </div>
                                    <div class="form-group">
                                        <div class="custom-control custom-switch">
                                            @Html.CheckBoxFor(model => model.BrowserNotifications, new { @class = "custom-control-input", @id = "browserNotifications" })
                                            @Html.LabelFor(model => model.BrowserNotifications, "Tarayıcı Bildirimleri", htmlAttributes: new { @class = "custom-control-label", @for = "browserNotifications" })
                                            @Html.ValidationMessageFor(model => model.BrowserNotifications, "", new { @class = "text-danger" })
                                        </div>
                                        <small class="form-text text-muted">Tarayıcı üzerinden anlık bildirimler alın.</small>
                                    </div>
                                    <div class="form-group">
                                        <div class="custom-control custom-switch">
                                            @Html.CheckBoxFor(model => model.DashboardShared, new { @class = "custom-control-input", @id = "dashboardSharing" })
                                            @Html.LabelFor(model => model.DashboardShared, "Dashboard Paylaşım Bildirimleri", htmlAttributes: new { @class = "custom-control-label", @for = "dashboardSharing" })
                                            @Html.ValidationMessageFor(model => model.DashboardShared, "", new { @class = "text-danger" })
                                        </div>
                                        <small class="form-text text-muted">Dashboard paylaşıldığında bildirim alın.</small>
                                    </div>
                                    <div class="form-group">
                                        <div class="custom-control custom-switch">
                                            @Html.CheckBoxFor(model => model.SecurityAlerts, new { @class = "custom-control-input", @id = "securityAlerts" })
                                            @Html.LabelFor(model => model.SecurityAlerts, "Güvenlik Uyarıları", htmlAttributes: new { @class = "custom-control-label", @for = "securityAlerts" })
                                            @Html.ValidationMessageFor(model => model.SecurityAlerts, "", new { @class = "text-danger" })
                                        </div>
                                        <small class="form-text text-muted">Güvenlik ile ilgili önemli uyarıları alın.</small>
                                    </div>
                                    <button type="submit" class="btn btn-primary">Kaydet</button>
                                }
                            </div>

                            <!-- Gizlilik Tab -->
                            <div class="tab-pane fade" id="custom-tabs-two-messages" role="tabpanel" aria-labelledby="custom-tabs-two-messages-tab">
                                @using (Html.BeginForm("UpdatePrivacySettings", "Profile", null, FormMethod.Post, false, new { @class = "form-horizontal" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.Id)
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ProfileVisibility, "Profil Görünürlüğü", htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.ProfileVisibility, new SelectList(new[] {
                                            new { Value = "public", Text = "Herkese Açık" },
                                            new { Value = "private", Text = "Özel" },
                                            new { Value = "organization", Text = "Sadece Organizasyon" }
                                        }, "Value", "Text", Model.ProfileVisibility), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ProfileVisibility, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <div class="custom-control custom-switch">
                                            @Html.CheckBoxFor(model => model.AllowDashboardSharing, new { @class = "custom-control-input", @id = "allowDashboardSharing" })
                                            @Html.LabelFor(model => model.AllowDashboardSharing, "Dashboard Paylaşımına İzin Ver", htmlAttributes: new { @class = "custom-control-label", @for = "allowDashboardSharing" })
                                            @Html.ValidationMessageFor(model => model.AllowDashboardSharing, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="custom-control custom-switch">
                                            @Html.CheckBoxFor(model => model.TrackActivity, new { @class = "custom-control-input", @id = "trackActivity" })
                                            @Html.LabelFor(model => model.TrackActivity, "Aktivite Takibine İzin Ver", htmlAttributes: new { @class = "custom-control-label", @for = "trackActivity" })
                                            @Html.ValidationMessageFor(model => model.TrackActivity, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="custom-control custom-switch">
                                            @Html.CheckBoxFor(model => model.TwoFactorEnabled, new { @class = "custom-control-input", @id = "twoFactorAuth" })
                                            @Html.LabelFor(model => model.TwoFactorEnabled, "İki Faktörlü Kimlik Doğrulama", htmlAttributes: new { @class = "custom-control-label", @for = "twoFactorAuth" })
                                            @Html.ValidationMessageFor(model => model.TwoFactorEnabled, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <hr>
                                    <h5>Veri Yönetimi</h5>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <button type="button" class="btn btn-info btn-block" onclick="exportData()">Verilerimi İndir</button>
                                        </div>
                                        <div class="col-md-6">
                                            <button type="button" class="btn btn-danger btn-block" onclick="deleteAccount()">Hesabımı Sil</button>
                                        </div>
                                    </div>
                                    <button type="submit" class="btn btn-primary mt-3">Kaydet</button>
                                }
                            </div>

                            <!-- Şifre Değiştir Tab -->
                            <div class="tab-pane fade" id="custom-tabs-two-settings" role="tabpanel" aria-labelledby="custom-tabs-two-settings-tab">
                                @using (Html.BeginForm("ChangePassword", "Profile", null, FormMethod.Post, false, new { @class = "form-horizontal" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.Id)
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CurrentPassword, "Mevcut Şifre", htmlAttributes: new { @class = "control-label" })
                                        @Html.PasswordFor(model => model.CurrentPassword, new { @class = "form-control", @id = "currentPassword" })
                                        @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NewPassword, "Yeni Şifre", htmlAttributes: new { @class = "control-label" })
                                        @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control", @id = "newPassword" })
                                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                                        <small class="form-text text-muted">Şifreniz en az 8 karakter olmalı ve büyük harf, küçük harf, rakam içermelidir.</small>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ConfirmPassword, "Yeni Şifre Tekrar", htmlAttributes: new { @class = "control-label" })
                                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", @id = "confirmPassword" })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                    <button type="submit" class="btn btn-primary">Şifreyi Değiştir</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Delete Account Modal -->
<div class="modal fade" id="deleteAccountModal" tabindex="-1" role="dialog" aria-labelledby="deleteAccountModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteAccountModalLabel">Hesap Silme Onayı</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Hesabınızı silmek istediğinizden emin misiniz? Bu işlem geri alınamaz.</p>
                <p><strong>Uyarı:</strong> Tüm verileriniz kalıcı olarak silinecektir.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">İptal</button>
                <form asp-action="DeleteAccount" asp-controller="Profile" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Hesabımı Sil</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Bootstrap tab initialization
            $('#custom-tabs-two-tab a').on('click', function (e) {
                e.preventDefault();
                $(this).tab('show');
            });

            // URL hash support for tabs
            var hash = window.location.hash;
            if (hash) {
                $('#custom-tabs-two-tab a[href="' + hash + '"]').tab('show');
            }

            // Update URL when tab changes
            $('#custom-tabs-two-tab a').on('shown.bs.tab', function (e) {
                window.location.hash = e.target.getAttribute('href');
            });
        });

        function exportData() {
            $.ajax({
                url: '@Url.Action("ExportData", "Profile")',
                type: 'POST',
                data: { __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() },
                success: function(response) {
                    toastr.success('Verileriniz dışa aktarılıyor. E-posta adresinize gönderilecektir.');
                },
                error: function() {
                    toastr.error('Veri dışa aktarılırken bir hata oluştu.');
                }
            });
        }

        function deleteAccount() {
            $('#deleteAccountModal').modal('show');
        }
    </script>
}